// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pavlova_Anastasia_KT_42_22;

#nullable disable

namespace Pavlova_Anastasia_KT_42_22.Migrations
{
    [DbContext(typeof(TeacherDbcontext))]
    [Migration("20250428090330_CreateDatabase")]
    partial class CreateDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Pavlova_Anastasia_KT_42_22.Models.AcademicDegree", b =>
                {
                    b.Property<int>("AcademicDegreeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("academic_degree_id")
                        .HasComment("Идентификатор записи ученой степени");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AcademicDegreeId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("c_academic_degree_name")
                        .HasComment("Наименование ученой степени");

                    b.HasKey("AcademicDegreeId")
                        .HasName("pk_cd_academic_degree_academic_degree_id");

                    b.ToTable("AcademicDegree");
                });

            modelBuilder.Entity("Pavlova_Anastasia_KT_42_22.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("group_id")
                        .HasComment("Идентификатор записи кафедры");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("c_department_name")
                        .HasComment("Наименование кафедры");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("DepartmentId")
                        .HasName("pk_cd_department_department_id");

                    b.HasIndex("TeacherId")
                        .IsUnique();

                    b.HasIndex(new[] { "TeacherId" }, "idx_cd_department_fk_f_teacher_id");

                    b.ToTable("cd_department", (string)null);
                });

            modelBuilder.Entity("Pavlova_Anastasia_KT_42_22.Models.Discipline", b =>
                {
                    b.Property<int>("DisciplineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("discipline_id")
                        .HasComment("Идентификатор записи дисциплины");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DisciplineId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("c_вiscipline_name")
                        .HasComment("Наименование дисциплины");

                    b.HasKey("DisciplineId")
                        .HasName("pk_cd_discipline_disciplinep_id");

                    b.ToTable("Discipline");
                });

            modelBuilder.Entity("Pavlova_Anastasia_KT_42_22.Models.JobPosition", b =>
                {
                    b.Property<int>("JobPositionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("job_position_id")
                        .HasComment("Идентификатор записи ученой должности преподавателя");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JobPositionId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("c_academic_degree_name")
                        .HasComment("Наименование должности");

                    b.HasKey("JobPositionId")
                        .HasName("pk_cd_job_position_job_position_id");

                    b.ToTable("JobPosition");
                });

            modelBuilder.Entity("Pavlova_Anastasia_KT_42_22.Models.Teacher", b =>
                {
                    b.Property<int>("TeacherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("teacher_id")
                        .HasComment("Идентификатор записи преподавателя");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeacherId"));

                    b.Property<int>("AcademicDegreeId")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("c_teacher_firstname")
                        .HasComment("Имя преподавателя");

                    b.Property<int>("JobPositionId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("c_teacher_lastname")
                        .HasComment("Фамилия преподавателя");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("c_teacher_middlename")
                        .HasComment("Отчество");

                    b.HasKey("TeacherId")
                        .HasName("pk_cd_teacher_teacher_id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("JobPositionId");

                    b.HasIndex(new[] { "AcademicDegreeId" }, "idx_cd_teacher_fk_f_academic_degree_id");

                    b.HasIndex(new[] { "AcademicDegreeId" }, "idx_cd_teacher_fk_f_department_id");

                    b.HasIndex(new[] { "AcademicDegreeId" }, "idx_cd_teacher_fk_f_job_position_id");

                    b.ToTable("cd_teacher", (string)null);
                });

            modelBuilder.Entity("Pavlova_Anastasia_KT_42_22.Models.WorkLoad", b =>
                {
                    b.Property<int>("WorkLoadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("work_load_id")
                        .HasComment("Идентификатор записи рабочей программы");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkLoadId"));

                    b.Property<int>("DisciplineId")
                        .HasColumnType("int");

                    b.Property<int>("Hours")
                        .HasColumnType("int")
                        .HasColumnName("c_hours")
                        .HasComment("количество часов");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("WorkLoadId")
                        .HasName("pk_cd_work_load_work_load_id");

                    b.HasIndex("DisciplineId");

                    b.HasIndex(new[] { "TeacherId" }, "idx_cd_work_load_fk_f_discipline_id");

                    b.HasIndex(new[] { "TeacherId" }, "idx_cd_work_load_fk_f_teacher_id");

                    b.ToTable("cd_work_load", (string)null);
                });

            modelBuilder.Entity("Pavlova_Anastasia_KT_42_22.Models.Department", b =>
                {
                    b.HasOne("Pavlova_Anastasia_KT_42_22.Models.Teacher", "Teacher")
                        .WithOne()
                        .HasForeignKey("Pavlova_Anastasia_KT_42_22.Models.Department", "TeacherId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("fk_leader_id");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("Pavlova_Anastasia_KT_42_22.Models.Teacher", b =>
                {
                    b.HasOne("Pavlova_Anastasia_KT_42_22.Models.AcademicDegree", "AcademicDegree")
                        .WithMany()
                        .HasForeignKey("AcademicDegreeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_f_academic_degree_id");

                    b.HasOne("Pavlova_Anastasia_KT_42_22.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_f_department_id");

                    b.HasOne("Pavlova_Anastasia_KT_42_22.Models.JobPosition", "JobPosition")
                        .WithMany()
                        .HasForeignKey("JobPositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_f_job_position_id");

                    b.Navigation("AcademicDegree");

                    b.Navigation("Department");

                    b.Navigation("JobPosition");
                });

            modelBuilder.Entity("Pavlova_Anastasia_KT_42_22.Models.WorkLoad", b =>
                {
                    b.HasOne("Pavlova_Anastasia_KT_42_22.Models.Discipline", "Discipline")
                        .WithMany()
                        .HasForeignKey("DisciplineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_f_discipline_id");

                    b.HasOne("Pavlova_Anastasia_KT_42_22.Models.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_teacher_id");

                    b.Navigation("Discipline");

                    b.Navigation("Teacher");
                });
#pragma warning restore 612, 618
        }
    }
}
